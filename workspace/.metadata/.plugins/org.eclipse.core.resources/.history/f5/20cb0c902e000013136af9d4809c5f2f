package model;

import properIdent;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;

public class IdentificationManipulation {

	public static int countLines(String filename) throws IOException {
	    InputStream is = new BufferedInputStream(new FileInputStream(filename));
	    try {
	        byte[] c = new byte[1024];
	        int count = 0;
	        int readChars = 0;
	        boolean empty = true;
	        while ((readChars = is.read(c)) != -1) {
	            empty = false;
	            for (int i = 0; i < readChars; ++i) {
	                if (c[i] == '\n') {
	                    ++count;
	                }
	            }
	        }
	        return (count == 0 && !empty) ? 1 : count;
	    } finally {
	        is.close();
	    }
	}
	
	public static properIdent[] parseInputFile(File file){
		
		properIdent[] returnVals = null;
		try {
			returnVals = new properIdent[countLines(file.getAbsolutePath()) - 1];
		} catch (IOException e1) {
			System.out.println("Problem when counting lines in csv");
			e1.printStackTrace();
		}
		BufferedReader br = null;
		String[] splitLine;
		
		try {
			
			String sCurrentLine;
			int i = 0;
			int j;
			br = new BufferedReader(new FileReader(file));
			sCurrentLine = br.readLine();
			while ((sCurrentLine = br.readLine()) != null) {
				j = 0;
				splitLine = sCurrentLine.split(",", 0);
				double[] probs = new double[splitLine.length - 2];
				while(j < splitLine.length - 2){
					probs[j] = new Double(splitLine[j + 2]);
					j++;
				}
				returnVals[i] = new properIdent(splitLine[1], probs);
				System.out.println("dealt with " + (i+1) + " entries in csv");
				i++;
			}
 
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		sortIdents(returnVals, 0, returnVals.length - 1);
		
		return returnVals;
	}
}
